// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel_list_API.Data;

namespace Travel_list_API.Migrations
{
    [DbContext(typeof(TravelListContext))]
    [Migration("20210114221544_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travel_list_API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TravelListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelListId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Opmaak",
                            TravelListId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Technologie",
                            TravelListId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bad",
                            TravelListId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kledij",
                            TravelListId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Opmaak",
                            TravelListId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Technologie",
                            TravelListId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bad",
                            TravelListId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kledij",
                            TravelListId = 2
                        });
                });

            modelBuilder.Entity("Travel_list_API.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2021, 1, 14, 23, 15, 43, 949, DateTimeKind.Local).AddTicks(117),
                            Email = "client@gmail.com",
                            FirstName = "Pog",
                            LastName = "Champ"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2021, 1, 14, 23, 15, 43, 950, DateTimeKind.Local).AddTicks(7660),
                            Email = "client2@gmail.com",
                            FirstName = "Ayaya",
                            LastName = "Clap"
                        });
                });

            modelBuilder.Entity("Travel_list_API.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Added")
                        .HasColumnType("bit");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TravelListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelListId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Added = false,
                            Amount = 1,
                            Category = "Opmaak",
                            Name = "Kam",
                            TravelListId = 1
                        },
                        new
                        {
                            Id = 2,
                            Added = true,
                            Amount = 2,
                            Category = "Technologie",
                            Name = "Laptop",
                            TravelListId = 1
                        },
                        new
                        {
                            Id = 3,
                            Added = true,
                            Amount = 5,
                            Category = "Bad",
                            Name = "Handdoek",
                            TravelListId = 2
                        },
                        new
                        {
                            Id = 4,
                            Added = false,
                            Amount = 3,
                            Category = "Bad",
                            Name = "Tandenborstel",
                            TravelListId = 2
                        },
                        new
                        {
                            Id = 5,
                            Added = false,
                            Amount = 1,
                            Category = "Technologie",
                            Name = "Batterij",
                            TravelListId = 3
                        },
                        new
                        {
                            Id = 6,
                            Added = true,
                            Amount = 8,
                            Category = "Bad",
                            Name = "Shampoo",
                            TravelListId = 4
                        },
                        new
                        {
                            Id = 7,
                            Added = false,
                            Amount = 6,
                            Category = "Kledij",
                            Name = "Broek",
                            TravelListId = 4
                        },
                        new
                        {
                            Id = 8,
                            Added = true,
                            Amount = 9,
                            Category = "Kledij",
                            Name = "Sjaal",
                            TravelListId = 5
                        });
                });

            modelBuilder.Entity("Travel_list_API.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TravelListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelListId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Travel_list_API.Models.TravelList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("TravelLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            EndDate = new DateTime(2021, 1, 19, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(7609),
                            Name = "Spanje",
                            StartDate = new DateTime(2021, 1, 14, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(7311)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 1,
                            EndDate = new DateTime(2021, 1, 19, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(8170),
                            Name = "Frankrijk",
                            StartDate = new DateTime(2021, 1, 14, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(8151)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 1,
                            EndDate = new DateTime(2021, 1, 19, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(8187),
                            Name = "Nederland",
                            StartDate = new DateTime(2021, 1, 14, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(8183)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 2,
                            EndDate = new DateTime(2021, 1, 19, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(8193),
                            Name = "Duitsland",
                            StartDate = new DateTime(2021, 1, 14, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(8190)
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 2,
                            EndDate = new DateTime(2021, 1, 19, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(8199),
                            Name = "Noorwegen",
                            StartDate = new DateTime(2021, 1, 14, 23, 15, 43, 951, DateTimeKind.Local).AddTicks(8197)
                        });
                });

            modelBuilder.Entity("Travel_list_API.Models.Category", b =>
                {
                    b.HasOne("Travel_list_API.Models.TravelList", null)
                        .WithMany("Categories")
                        .HasForeignKey("TravelListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Travel_list_API.Models.Item", b =>
                {
                    b.HasOne("Travel_list_API.Models.TravelList", null)
                        .WithMany("Items")
                        .HasForeignKey("TravelListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Travel_list_API.Models.Task", b =>
                {
                    b.HasOne("Travel_list_API.Models.TravelList", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TravelListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Travel_list_API.Models.TravelList", b =>
                {
                    b.HasOne("Travel_list_API.Models.Client", null)
                        .WithMany("TravelLists")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
