// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel_list_API.Data;

namespace Travel_list_API.Migrations
{
    [DbContext(typeof(TravelListContext))]
    [Migration("20201114160207_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travel_list_API.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Added")
                        .HasColumnType("bit");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TravelListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelListId");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Added = false,
                            Amount = 1,
                            Category = 0,
                            Name = "Item 1",
                            TravelListId = 1
                        },
                        new
                        {
                            Id = 2,
                            Added = true,
                            Amount = 2,
                            Category = 0,
                            Name = "Item 2",
                            TravelListId = 1
                        },
                        new
                        {
                            Id = 3,
                            Added = true,
                            Amount = 5,
                            Category = 0,
                            Name = "Item 3",
                            TravelListId = 2
                        },
                        new
                        {
                            Id = 4,
                            Added = false,
                            Amount = 3,
                            Category = 0,
                            Name = "Item 4",
                            TravelListId = 2
                        },
                        new
                        {
                            Id = 5,
                            Added = false,
                            Amount = 1,
                            Category = 0,
                            Name = "Item 5",
                            TravelListId = 3
                        },
                        new
                        {
                            Id = 6,
                            Added = true,
                            Amount = 8,
                            Category = 0,
                            Name = "Item 6",
                            TravelListId = 4
                        },
                        new
                        {
                            Id = 7,
                            Added = false,
                            Amount = 6,
                            Category = 0,
                            Name = "Item 7",
                            TravelListId = 4
                        },
                        new
                        {
                            Id = 8,
                            Added = true,
                            Amount = 9,
                            Category = 0,
                            Name = "Item 8",
                            TravelListId = 5
                        });
                });

            modelBuilder.Entity("Travel_list_API.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelListId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("Travel_list_API.Models.TravelList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TravelLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 11, 14, 17, 2, 7, 302, DateTimeKind.Local).AddTicks(264),
                            Name = "Test1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 11, 14, 17, 2, 7, 303, DateTimeKind.Local).AddTicks(7518),
                            Name = "Test2"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 11, 14, 17, 2, 7, 303, DateTimeKind.Local).AddTicks(7544),
                            Name = "Test3"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2020, 11, 14, 17, 2, 7, 303, DateTimeKind.Local).AddTicks(7550),
                            Name = "Test4"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2020, 11, 14, 17, 2, 7, 303, DateTimeKind.Local).AddTicks(7553),
                            Name = "Test5"
                        });
                });

            modelBuilder.Entity("Travel_list_API.Models.Item", b =>
                {
                    b.HasOne("Travel_list_API.Models.TravelList", null)
                        .WithMany("Items")
                        .HasForeignKey("TravelListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Travel_list_API.Models.Task", b =>
                {
                    b.HasOne("Travel_list_API.Models.TravelList", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TravelListId");
                });
#pragma warning restore 612, 618
        }
    }
}
